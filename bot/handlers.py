from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from game.game import Game
from bot.message import help_message, rule_message
from telegram.ext import CallbackContext
from game.events import end_meeting
from bot.controller import start_game
from config.settings import MAX_PLAYERS



async def start(update: Update, context: CallbackContext):
    """–û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /start —ñ –¥–æ–¥–∞—î –≥—Ä–∞–≤—Ü—ñ–≤ –¥–æ –≥—Ä–∏."""
    game = context.application.bot_data.get("game")

    if not game:
        await update.message.reply_text("‚ùå –ì—Ä–∞ —â–µ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞.")
        return

    user_id = update.effective_user.id
    user_name = update.effective_user.first_name

    if game.state != "waiting":
        await update.message.reply_text("‚ùå –ì—Ä–∞ –≤–∂–µ –ø–æ—á–∞–ª–∞—Å—è. –í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –∑–∞—Ä–∞–∑.")
        return

    success, current_count = game.add_player(user_id, user_name)
    if success:
        await update.message.reply_text(
            f"‚úÖ –í–∏ –ø—Ä–∏—î–¥–Ω–∞–ª–∏—Å—è –¥–æ –≥—Ä–∏ —è–∫ {user_name}. –û—á—ñ–∫—É—î–º–æ —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤: {current_count}/{MAX_PLAYERS}."
        )

        # –û–ø–æ–≤—ñ—â–µ–Ω–Ω—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
        for other_id in game.players:
            if other_id != user_id:
                await context.bot.send_message(
                    chat_id=other_id,
                    text=f"üë§ –ì—Ä–∞–≤–µ—Ü—å {user_name} –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –≥—Ä–∏. –ì—Ä–∞–≤—Ü—ñ–≤: {current_count}/{MAX_PLAYERS}."
                )

        # –Ø–∫—â–æ –≤—Å—ñ –≥—Ä–∞–≤—Ü—ñ –∑—ñ–±—Ä–∞–Ω—ñ, –∑–∞–ø—É—Å–∫–∞—î–º–æ –≥—Ä—É
        if current_count == MAX_PLAYERS:
            await start_game(update, context)
    else:
        await update.message.reply_text("‚ö†Ô∏è –í–∏ –≤–∂–µ —É –≥—Ä—ñ –∞–±–æ –º—ñ—Å—Ü—è –±—ñ–ª—å—à–µ –Ω–µ–º–∞—î.")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–æ–≤—ñ–¥–∫–æ—é."""
    await update.message.reply_text(help_message())


async def rule_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏."""
    await update.message.reply_text(rule_message())

    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–≥—Ä–æ–≤–æ—ó –º–∞—Ç—Ä–∏—Ü—ñ
    try:
        with open("assets/gameMatrix_NearTheLake.png", "rb") as photo:
            await context.bot.send_photo(
                chat_id=update.effective_chat.id,
                photo=photo,
                caption=(
                    "üó∫Ô∏è **–Ü–≥—Ä–æ–≤–∞ –º–∞—Ç—Ä–∏—Ü—è —Å—Ç–∞–Ω—É –≤–æ–¥–∏:**\n\n"
                    "–í–æ–Ω–∞ –ø–æ–∫–∞–∑—É—î, —è–∫ –∑–º—ñ–Ω—é—î—Ç—å—Å—è —è–∫—ñ—Å—Ç—å –≤–æ–¥–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –≤–∞—à–∏—Ö —Ä—ñ—à–µ–Ω—å:\n"
                    "1Ô∏è‚É£ **–°–∫–∏–¥–∞–Ω–Ω—è** ‚Äì –¥–∞—î –ø—Ä–∏–±—É—Ç–æ–∫, –∞–ª–µ –ø–æ–≥—ñ—Ä—à—É—î —è–∫—ñ—Å—Ç—å –≤–æ–¥–∏.\n"
                    "2Ô∏è‚É£ **–û—á–∏—â–µ–Ω–Ω—è** ‚Äì –ø–æ–ª—ñ–ø—à—É—î —è–∫—ñ—Å—Ç—å –≤–æ–¥–∏, –∞–ª–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –º–µ–Ω—à–µ –ø—Ä–∏–±—É—Ç–∫—É.\n\n"
                    "üîÑ **–Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä —è–∫–æ—Å—Ç—ñ –≤–æ–¥–∏** –ø–µ—Ä–µ–º—ñ—â—É—î—Ç—å—Å—è:\n"
                    "  - –í–ª—ñ–≤–æ –ø—Ä–∏ —Å–∫–∏–¥–∞–Ω–Ω—ñ (1Ô∏è‚É£).\n"
                    "  - –í–ø—Ä–∞–≤–æ –ø—Ä–∏ –æ—á–∏—â–µ–Ω–Ω—ñ (2Ô∏è‚É£).\n"
                    "  - –†—ñ–≤–µ–Ω—å –∑–º—ñ–Ω—é—î—Ç—å—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥—ñ —á–µ—Ä–µ–∑ –∫—Ä–∞–π –º–∞—Ç—Ä–∏—Ü—ñ."
                )
            )
    except FileNotFoundError:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–≥—Ä–æ–≤–æ—ó –º–∞—Ç—Ä–∏—Ü—ñ.")


async def reset_game(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–∫–∏–¥–∞—î –ø–æ—Ç–æ—á–Ω—É –≥—Ä—É."""
    context.application.bot_data["game"] = Game()
    await update.message.reply_text("–ì—Ä—É —Å–∫–∏–Ω—É—Ç–æ. –í–∏ –º–æ–∂–µ—Ç–µ –ø–æ—á–∞—Ç–∏ –Ω–æ–≤—É –≥—Ä—É.")


async def game_status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î —Å—Ç–∞–Ω –≥—Ä–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    game = context.application.bot_data.get("game")
    if not game:
        await update.message.reply_text("–ì—Ä–∞ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∞.")
        return
    
    status = f"–°—Ç–∞–Ω –≥—Ä–∏:\n" \
             f"–ì—Ä–∞–≤—Ü—ñ–≤: {len(game.players)}/{game.max_players}\n" \
             f"–•—ñ–¥: {game.turn}\n" \
             f"–Ø–∫—ñ—Å—Ç—å –≤–æ–¥–∏: {game.lake.water_quality}"
    await update.message.reply_text(status)


async def player_message(update, context):
    game = context.application.bot_data.get("game")
    if not game or not game.meeting_active:
        await update.message.reply_text("–ù–∞—Ä–∞–¥–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞. –í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–∑ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")
        return

    # –õ–æ–≥—ñ–∫–∞ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—ñ–¥ —á–∞—Å –Ω–∞—Ä–∞–¥–∏
    await update.message.reply_text(f"{update.message.from_user.first_name}: {update.message.text}")


async def handle_action_callback(update, context):
    """–û–±—Ä–æ–±–ª—è—î –≤–∏–±—ñ—Ä –≥—Ä–∞–≤—Ü—è —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏."""
    query = update.callback_query
    action = query.data  # –û—Ç—Ä–∏–º—É—î–º–æ –≤–∏–±—Ä–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è (1, 2, 3, 4)
    user_id = query.from_user.id

    game = context.application.bot_data.get("game")
    if not game or game.state != "in_progress":
        await query.answer("–ì—Ä–∞ —â–µ –Ω–µ —Ä–æ–∑–ø–æ—á–∞–ª–∞—Å—è –∞–±–æ –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        return

    if user_id not in game.players:
        await query.answer("–í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —É –≥—Ä—ñ!")
        return

    # –û–Ω–æ–≤–ª—é—î–º–æ –¥—ñ—é –≥—Ä–∞–≤—Ü—è
    game.players[user_id]["current_action"] = action

    await query.answer(f"–í–∏ –≤–∏–±—Ä–∞–ª–∏: {action}")
    await query.edit_message_text(text=f"–í–∞—à –≤–∏–±—ñ—Ä: {action}")

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤—Å—ñ –≥—Ä–∞–≤—Ü—ñ –≤–∏–∫–æ–Ω–∞–ª–∏ –¥—ñ—ó
    if game.all_actions_collected():
        await game.process_turn(context)


async def handle_end_meeting_vote(update, context):
    """–û–±—Ä–æ–±–ª—è—î –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –Ω–∞—Ä–∞–¥–∏."""
    game = context.application.bot_data.get("game")
    user_id = update.effective_user.id

    if not game or not game.meeting_active:
        await update.callback_query.answer("–ù–∞—Ä–∞–¥–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∑–∞—Ä–∞–∑.")
        return

    if user_id in game.meeting_end_votes:
        await update.callback_query.answer("–í–∏ –≤–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å—É–≤–∞–ª–∏.")
        return

    game.meeting_end_votes.add(user_id)
    await update.callback_query.answer("–í–∞—à –≥–æ–ª–æ—Å –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –Ω–∞—Ä–∞–¥–∏ –∑–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ.")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—Å—ñ –ø—Ä–æ–≥–æ–ª–æ—Å—É–≤–∞–ª–∏
    if len(game.meeting_end_votes) == len(game.players):
        await end_meeting(context, game)  # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∑ events.py
